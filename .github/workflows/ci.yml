name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # --- Detect locations/flags ---
  detect:
    name: Detect test/lint targets
    runs-on: ubuntu-latest
    outputs:
      has_unit: ${{ steps.probe.outputs.has_unit }}
      has_integration: ${{ steps.probe.outputs.has_integration }}
      has_precommit: ${{ steps.probe.outputs.has_precommit }}
      unit_dir: ${{ steps.probe.outputs.unit_dir }}
      integ_dir: ${{ steps.probe.outputs.integ_dir }}
      src_dir: ${{ steps.probe.outputs.src_dir }}
      pkg_at_root: ${{ steps.probe.outputs.pkg_at_root }}
    steps:
      - uses: actions/checkout@v4

      - id: probe
        shell: bash
        run: |
          set -euo pipefail

          # Candidate tests roots
          CANDIDATES=(
            "mutually_informed_networks/src/lib_mutual_information/tests"
            "src/lib_mutual_information/tests"
          )

          UNIT_DIR=""
          for c in "${CANDIDATES[@]}"; do
            if [ -d "$c" ]; then UNIT_DIR="$c"; break; fi
          done

          INTEG_DIR=""
          if [ -n "${UNIT_DIR}" ] && [ -d "${UNIT_DIR}/integration" ]; then
            INTEG_DIR="${UNIT_DIR}/integration"
          fi

          # Derive SRC_DIR from UNIT_DIR if it contains /src/
          SRC_DIR=""
          if [[ -n "${UNIT_DIR}" && "${UNIT_DIR}" == *"/src/"* ]]; then
            # Keep everything up to and including /src
            prefix="${UNIT_DIR%%/src/*}"
            SRC_DIR="${prefix}/src"
          fi

          # Defaults
          echo "has_unit=false" >> "$GITHUB_OUTPUT"
          echo "has_integration=false" >> "$GITHUB_OUTPUT"
          echo "has_precommit=false" >> "$GITHUB_OUTPUT"
          echo "unit_dir=${UNIT_DIR}" >> "$GITHUB_OUTPUT"
          echo "integ_dir=${INTEG_DIR}" >> "$GITHUB_OUTPUT"
          echo "src_dir=${SRC_DIR}" >> "$GITHUB_OUTPUT"

          # Presence checks
          if [ -n "${UNIT_DIR}" ] && find "${UNIT_DIR}" -type f -name '*.py' -print -quit*]()
